# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - uses: nick-invision/private-action-loader@v3
        with:
          pal-repo-token: ${{ secrets.REPO_TOKEN }}
          pal-repo-name: saif-tari/semantic-release-action@master
          
      - name: Set env
        run: |
          echo "RELEASE_VERSION=$(git tag | sort -V | tail -1 | sed 's/v//')" >> $GITHUB_ENV
      
      - name: Display Current & Next Versions For Release
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          export GITHUB_SHA_SHORT=$(git rev-parse --short $GITHUB_SHA)
          export GITHUB_NUM_COMMIT=$(git rev-list  $(git rev-list --tags --no-walk --max-count=1)..HEAD --count)
          export NEXT_VERSION=${{ steps.semantic.outputs.new_release_version }}
          echo "The next release version $NEXT_VERSION}}"
          echo "Current Version  $NEXT_VERSION-$GITHUB_NUM_COMMIT.$GITHUB_SHA_SHORT"
      
      - name: Display Current when no release changes found
        if: steps.semantic.outputs.new_release_published == 'false' && env.RELEASE_VERSION != ''
        run: |
          export GITHUB_SHA_SHORT=$(git rev-parse --short $GITHUB_SHA)
          export GITHUB_NUM_COMMIT=$(git rev-list  $(git rev-list --tags --no-walk --max-count=1)..HEAD --count)
          export NEXT_VERSION=$(git tag | sort -V | tail -1 | sed 's/v//')
          echo "The next release version $NEXT_VERSION}}"
          echo "Current Version  $NEXT_VERSION-$GITHUB_NUM_COMMIT.$GITHUB_SHA_SHORT"
      
      - name: Display Current when with no previous release
        if: steps.semantic.outputs.new_release_published == 'false' && env.RELEASE_VERSION == ''
        run: |
          export GITHUB_SHA_SHORT=$(git rev-parse --short $GITHUB_SHA)
          export GITHUB_NUM_COMMIT=$(git rev-list  $(git rev-list --tags --no-walk --max-count=1)..HEAD --count)
          export NEXT_VERSION="1.0.0"
          echo "The next release version $NEXT_VERSION}}"
          echo "Current Version  $NEXT_VERSION-$GITHUB_NUM_COMMIT.$GITHUB_SHA_SHORT"
          
